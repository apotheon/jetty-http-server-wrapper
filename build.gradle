buildscript {
  repositories {
    jcenter()
  }
}

plugins {
  id 'com.jfrog.bintray' version '1.7.3'
  id 'net.researchgate.release' version '2.5.0'
}

apply plugin: 'java'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'maven-publish'

group = 'com.palominolabs.http'
ext.isReleaseVersion = !version.endsWith("SNAPSHOT")

sourceCompatibility = JavaVersion.VERSION_1_7

ext {
  depVersions = [
      slf4j: '1.7.22',
      guice: '4.1.0'
  ]
}

dependencies {
  compile 'com.google.code.findbugs:jsr305:3.0.1'
  compile 'com.google.guava:guava:21.0'

  compile "org.slf4j:slf4j-api:$depVersions.slf4j"
  testRuntime "org.slf4j:slf4j-simple:$depVersions.slf4j"
  testRuntime "org.slf4j:log4j-over-slf4j:$depVersions.slf4j"
  testRuntime "org.slf4j:jcl-over-slf4j:$depVersions.slf4j"
  testCompile "org.slf4j:jul-to-slf4j:$depVersions.slf4j"

  compile 'org.eclipse.jetty:jetty-servlet:9.4.1.v20170120'

  compile "com.google.inject.extensions:guice-servlet:$depVersions.guice"
  compile "com.google.inject.extensions:guice-assistedinject:$depVersions.guice"
  compile 'ch.qos.logback:logback-access:1.2.1'

  testCompile 'com.palominolabs.config:config-inject:1.0.1'

  testCompile 'org.apache.httpcomponents:httpclient:4.3.3'
  testCompile 'org.easymock:easymock:3.3'

  testCompile 'junit:junit:4.12'
}

configurations {
  all*.exclude group: 'commons-logging', module: 'commons-logging'
}

repositories {
  jcenter()
}

task sourceJar(type: Jar, dependsOn: classes) {
  from sourceSets.main.allJava
}

task javadocJar(type: Jar, dependsOn: javadoc) {
  from javadoc.destinationDir
}

publishing {
  publications {
    bintray(MavenPublication) {
      from components.java
      groupId project.group
      artifactId project.name
      version project.version

      artifact sourceJar {
        classifier 'sources'
      }

      artifact javadocJar {
        classifier 'javadoc'
      }
    }
  }
}

release {
  tagTemplate = 'v${version}'
}

bintray {
  user = rootProject.hasProperty('bintrayUser') ? rootProject.property('bintrayUser') : 'FIXME'
  key = rootProject.hasProperty('bintrayApiKey') ? rootProject.property('bintrayApiKey') : 'FIXME'
  publications = ['bintray']

  pkg {
    repo = 'maven'
    licenses = ['Copyfree']
    vcsUrl = 'https://github.com/palominolabs/jetty-http-server-wrapper'
    name = 'com.palominolabs.http:jetty-http-server-wrapper'

    version {
      name = rootProject.property('version')
      released = new Date()
      if (project.isReleaseVersion) {
        vcsTag = 'v' + project.version
      }
    }
  }
}
